object DataModule1: TDataModule1
  OldCreateOrder = False
  Height = 878
  HorizontalOffset = 1681
  VerticalOffset = 6
  Width = 312
  object zc1: TZConnection
    ControlsCodePage = cCP_UTF8
    AutoEncodeStrings = False
    Properties.Strings = (
      'AutoEncodeStrings='
    )
    AutoCommit = False
    TransactIsolationLevel = tiRepeatableRead
    Connected = True
    HostName = 'www.rgibertini.it'
    Port = 0
    Database = 'rgibertini_minifinance'
    User = 'minuuser'
    Password = '5v1Zvi!6'
    Protocol = 'mysql-5'
    left = 24
    top = 16
  end
  object ds1: TDataSource
    AutoEdit = False
    DataSet = zq1
    left = 24
    top = 80
  end
  object zq1: TZQuery
    Connection = zc1
    AfterRefresh = zq1AfterRefresh
    Filtered = True
    UpdateObject = zup1
    Active = True
    SQL.Strings = (
      'select movimenti.*, conti.descrizione'
      'from movimenti '
      'left join conti '
      'on movimenti.idconto=conti.idconto'
      'ORDER BY dataval DESC'
    )
    Params = <>
    left = 104
    top = 80
  end
  object zup1: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM movimenti'
      'WHERE'
      '  movimenti.IDMOV = :OLD_IDMOV'
    )
    InsertSQL.Strings = (
      'INSERT INTO movimenti'
      '  (IDMOV, IDCONTO, DATAOP, DATAVAL, DESCRIZIONE, ENTRATE, USCITE, RICONCILIATO, '
      '   PRESUNTO)'
      'VALUES'
      '  (:IDMOV, :IDCONTO, :DATAOP, :DATAVAL, :DESCRIZIONE, :ENTRATE, :USCITE, '
      '   :RICONCILIATO, :PRESUNTO)'
    )
    ModifySQL.Strings = (
      'UPDATE movimenti SET'
      '  IDMOV = :IDMOV,'
      '  IDCONTO = :IDCONTO,'
      '  DATAOP = :DATAOP,'
      '  DATAVAL = :DATAVAL,'
      '  DESCRIZIONE = :DESCRIZIONE,'
      '  ENTRATE = :ENTRATE,'
      '  USCITE = :USCITE,'
      '  RICONCILIATO = :RICONCILIATO,'
      '  PRESUNTO = :PRESUNTO'
      'WHERE'
      '  movimenti.IDMOV = :OLD_IDMOV'
    )
    UseSequenceFieldForRefreshSQL = False
    left = 184
    top = 80
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'IDMOV'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'IDCONTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DATAOP'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DATAVAL'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DESCRIZIONE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'ENTRATE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'USCITE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'RICONCILIATO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'PRESUNTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDMOV'
        ParamType = ptUnknown
      end>
  end
  object dsanagconti: TDataSource
    AutoEdit = False
    DataSet = zqanagconti
    left = 24
    top = 144
  end
  object zqanagconti: TZQuery
    Connection = zc1
    UpdateObject = zupanagconti
    Active = True
    SQL.Strings = (
      'SELECT *'
      'from conti'
    )
    Params = <>
    left = 104
    top = 144
  end
  object zupanagconti: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM conti'
      'WHERE'
      '  conti.IDCONTO = :OLD_IDCONTO'
    )
    InsertSQL.Strings = (
      'INSERT INTO conti'
      '  (IDCONTO, DESCRIZIONE, IBAN, ABI, CAB, CIN, FILIALE, REFERENTE, NUMERO, '
      '   SCOPERTO, SWIFT, NOTE)'
      'VALUES'
      '  (:IDCONTO, :DESCRIZIONE, :IBAN, :ABI, :CAB, :CIN, :FILIALE, :REFERENTE, '
      '   :NUMERO, :SCOPERTO, :SWIFT, :NOTE)'
    )
    ModifySQL.Strings = (
      'UPDATE conti SET'
      '  IDCONTO = :IDCONTO,'
      '  DESCRIZIONE = :DESCRIZIONE,'
      '  IBAN = :IBAN,'
      '  ABI = :ABI,'
      '  CAB = :CAB,'
      '  CIN = :CIN,'
      '  FILIALE = :FILIALE,'
      '  REFERENTE = :REFERENTE,'
      '  NUMERO = :NUMERO,'
      '  SCOPERTO = :SCOPERTO,'
      '  SWIFT = :SWIFT,'
      '  NOTE = :NOTE'
      'WHERE'
      '  conti.IDCONTO = :OLD_IDCONTO'
    )
    UseSequenceFieldForRefreshSQL = False
    left = 184
    top = 144
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'IDCONTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DESCRIZIONE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'IBAN'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'ABI'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'CAB'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'CIN'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'FILIALE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'REFERENTE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'NUMERO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'SCOPERTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'SWIFT'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'NOTE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDCONTO'
        ParamType = ptUnknown
      end>
  end
  object dsanagaff: TDataSource
    AutoEdit = False
    DataSet = zqanagaff
    left = 24
    top = 208
  end
  object zqanagaff: TZQuery
    Connection = zc1
    UpdateObject = zupanagaff
    Active = True
    SQL.Strings = (
      'SELECT affidamenti.*, conti.descrizione'
      'from affidamenti'
      'left join conti '
      'on affidamenti.idconto=conti.idconto'
    )
    Params = <>
    left = 104
    top = 208
  end
  object zupanagaff: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM affidamenti'
      'WHERE'
      '  affidamenti.IDAFFIDAMENTO = :OLD_IDAFFIDAMENTO'
    )
    InsertSQL.Strings = (
      'INSERT INTO affidamenti'
      '  (IDAFFIDAMENTO, DESCRIZIONE, IDCONTO, REFERENTE, NUMERO)'
      'VALUES'
      '  (:IDAFFIDAMENTO, :DESCRIZIONE, :IDCONTO, :REFERENTE, :NUMERO)'
    )
    ModifySQL.Strings = (
      'UPDATE affidamenti SET'
      '  IDAFFIDAMENTO = :IDAFFIDAMENTO,'
      '  DESCRIZIONE = :DESCRIZIONE,'
      '  IDCONTO = :IDCONTO,'
      '  REFERENTE = :REFERENTE,'
      '  NUMERO = :NUMERO'
      'WHERE'
      '  affidamenti.IDAFFIDAMENTO = :OLD_IDAFFIDAMENTO'
    )
    UseSequenceFieldForRefreshSQL = False
    left = 184
    top = 208
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'IDAFFIDAMENTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DESCRIZIONE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'IDCONTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'REFERENTE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'NUMERO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDAFFIDAMENTO'
        ParamType = ptUnknown
      end>
  end
  object dsanagtipoaff: TDataSource
    AutoEdit = False
    DataSet = zqanagtipoaff
    left = 24
    top = 272
  end
  object zqanagtipoaff: TZQuery
    Connection = zc1
    UpdateObject = zupanagtipoaff
    Active = True
    SQL.Strings = (
      'select *'
      'from tipoaffidamento'
    )
    Params = <>
    left = 104
    top = 272
  end
  object zupanagtipoaff: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM tipoaffidamento'
      'WHERE'
      '  tipoaffidamento.IDTIPO = :OLD_IDTIPO'
    )
    InsertSQL.Strings = (
      'INSERT INTO tipoaffidamento'
      '  (IDTIPO, DESCRIZIONE)'
      'VALUES'
      '  (:IDTIPO, :DESCRIZIONE)'
    )
    ModifySQL.Strings = (
      'UPDATE tipoaffidamento SET'
      '  IDTIPO = :IDTIPO,'
      '  DESCRIZIONE = :DESCRIZIONE'
      'WHERE'
      '  tipoaffidamento.IDTIPO = :OLD_IDTIPO'
    )
    UseSequenceFieldForRefreshSQL = False
    left = 184
    top = 272
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'IDTIPO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DESCRIZIONE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDTIPO'
        ParamType = ptUnknown
      end>
  end
  object dsanagfidi: TDataSource
    AutoEdit = False
    DataSet = zqanagfidi
    left = 24
    top = 336
  end
  object zqanagfidi: TZQuery
    Connection = zc1
    UpdateObject = zupanagfidi
    Active = True
    SQL.Strings = (
      'select fidi.*, affidamenti.descrizione'
      'from fidi'
      'left join affidamenti'
      'on fidi.idaffidamento=affidamenti.idaffidamento'
    )
    Params = <>
    left = 104
    top = 336
  end
  object zupanagfidi: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM fidi'
      'WHERE'
      '  fidi.IDFIDO = :OLD_IDFIDO'
    )
    InsertSQL.Strings = (
      'INSERT INTO fidi'
      '  (IDFIDO, DESCRIZIONE, IDAFFIDAMENTO, FIDO, TOTALE)'
      'VALUES'
      '  (:IDFIDO, :DESCRIZIONE, :IDAFFIDAMENTO, :FIDO, :TOTALE)'
    )
    ModifySQL.Strings = (
      'UPDATE fidi SET'
      '  IDFIDO = :IDFIDO,'
      '  DESCRIZIONE = :DESCRIZIONE,'
      '  IDAFFIDAMENTO = :IDAFFIDAMENTO,'
      '  FIDO = :FIDO,'
      '  TOTALE = :TOTALE'
      'WHERE'
      '  fidi.IDFIDO = :OLD_IDFIDO'
    )
    UseSequenceFieldForRefreshSQL = False
    left = 184
    top = 336
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'IDFIDO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'DESCRIZIONE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'IDAFFIDAMENTO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'FIDO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'TOTALE'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDFIDO'
        ParamType = ptUnknown
      end>
  end
  object dsfiditipofido: TDataSource
    AutoEdit = False
    DataSet = zqfiditipofido
    left = 24
    top = 400
  end
  object zqfiditipofido: TZQuery
    Connection = zc1
    UpdateObject = zupfiditipofido
    Active = True
    SQL.Strings = (
      'select fiditipifido.*, tipoaffidamento.descrizione'
      'from fiditipifido'
      'left join tipoaffidamento'
      'on fiditipifido.idtipo=tipoaffidamento.idtipo'
    )
    Params = <>
    MasterFields = 'IDFIDO'
    MasterSource = dsanagfidi
    LinkedFields = 'IDFIDO'
    left = 104
    top = 400
  end
  object zupfiditipofido: TZUpdateSQL
    DeleteSQL.Strings = (
      'DELETE FROM fiditipifido'
      'WHERE'
      '  fiditipifido.IDFIDO = :OLD_IDFIDO AND'
      '  fiditipifido.IDTIPO = :OLD_IDTIPO'
    )
    InsertSQL.Strings = (
      'INSERT INTO fiditipifido'
      '  (IDFIDO, IDTIPO)'
      'VALUES'
      '  (:IDFIDO, :IDTIPO)'
    )
    ModifySQL.Strings = (
      'UPDATE fiditipifido SET'
      '  IDFIDO = :IDFIDO,'
      '  IDTIPO = :IDTIPO'
      'WHERE'
      '  fiditipifido.IDFIDO = :OLD_IDFIDO AND'
      '  fiditipifido.IDTIPO = :OLD_IDTIPO'
    )
    UseSequenceFieldForRefreshSQL = False
    left = 184
    top = 400
    ParamData = <    
      item
        DataType = ftUnknown
        Name = 'IDFIDO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'IDTIPO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDFIDO'
        ParamType = ptUnknown
      end    
      item
        DataType = ftUnknown
        Name = 'OLD_IDTIPO'
        ParamType = ptUnknown
      end>
  end
end
